
public class LinkedList {
    // create class of node.

    public class Node {
        int data;
        Node next;

        public Node(int data) {
            this.data = data;
            this.next = null;

        }
    }

    public Node head;
    public Node tail;
    

    public void addFirst(int data) {
        // step1 = create newnode;
        Node newnode = new Node(data);
        // corner case
        if (head == null) {
            head = tail = newnode;
            return;
        }
        // step2 = newnode next in head
        newnode.next = head; // link
        // step3 =head assing to new node
        head = newnode;

    }

    public void addLast(int data) {
        // step1= create newnode
        Node newnode = new Node(data);
        // corner case
        if (head == null) {
            head = tail = newnode;
            return;
        }
        // step2=tails next equal newnode
        tail.next = newnode;
        // step3=tail assgn newnode
        tail = newnode;
    }

    public void print() {
        Node temp = head;
        if (head == null) {
            System.out.print("ll is empty"); 
        }
            while (temp != null) {
                System.out.print(temp.data + "->");
                temp = temp.next;
            }
            System.out.println("null");
        }
    

    public static void main(String args[]) {
        LinkedList ll = new LinkedList();
        ll.addFirst(1);
        ll.print();
        ll.addFirst(2);
        ll.addLast(3);
        ll.print();

        ll.addLast(6);
        ll.print();
        ll.addFirst(9);

    }

}
